name: Weekly Run and Update Gist

on:
  schedule:
    - cron: '0 0 * * 0' # 每周日 UTC 时间 0:00，即上海时间 8:00
  workflow_dispatch: # 手动触发的选项

jobs:
  run-script-and-update-gist:
    runs-on: ubuntu-latest

    env:
      SUBLINK: ${{ secrets.SUBLINK }} # 从 GitHub Secrets 中获取 SUBLINK 值
      GIST_TOKEN: ${{ secrets.GIST_TOKEN }} # 从 GitHub Secrets 中获取 Gist Token
      GIST_ID: ${{ secrets.GIST_ID }} # 从 GitHub Secrets 中获取目标 Gist ID

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Run the script
      run: |
        echo "Running run.sh script..."
        chmod +x run.sh
        ./run.sh
        if [ ! -f config.json ]; then
          echo "Error: config.json not found!"
          exit 1
        fi
        echo "config.json generated successfully."

    - name: Upload config.json to Gist
      run: |
        echo "Uploading config.json to Gist with ID: $GIST_ID"

        # 读取 config.json 内容并构建 API 的 JSON 请求
        jq -n --arg content "$(cat config.json)" '{
          files: {
            "config.json": {
              "content": $content
            }
          }
        }' > payload.json

        # 调用 GitHub Gist API 上传文件
        response=$(curl -s -X PATCH \
          -H "Authorization: token $GIST_TOKEN" \
          -H "Content-Type: application/json" \
          --data @payload.json \
          https://api.github.com/gists/$GIST_ID)

        # 检查返回结果
        gist_url=$(echo "$response" | jq -r '.html_url')
        if [ "$gist_url" == "null" ]; then
          echo "Error: Failed to update Gist"
          echo "Response: $response"
          exit 1
        fi

        echo "Gist updated successfully: $gist_url"
  
    - name: Cleanup temporary files
      run: rm -f payload.json
  

    - name: Success message
      run: echo "Workflow completed successfully!"
