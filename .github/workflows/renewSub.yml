name: Weekly Run and Update Gist

on:
  schedule:
    - cron: '0 0 * * 0' # 每周日 UTC 时间 0:00
  workflow_dispatch:

jobs:
  run-script-and-update-gist:
    runs-on: ubuntu-latest

    env:
      SUBLINK: ${{ secrets.SUBLINK }}
      GIST_TOKEN: ${{ secrets.GIST_TOKEN }}
      GIST_ID: ${{ secrets.GIST_ID }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Run the script
      run: |
        echo "Running run.sh script..."
        chmod +x run.sh
        ./run.sh

    - name: Check if config.yaml exists
      run: |
        if [ ! -f config.yaml ]; then
          echo "Error: config.yaml not found!"
          exit 1
        fi
        echo "config.yaml exists."
        ls -l config.yaml

    - name: Upload config.yaml to Gist
      run: |
        echo "Uploading config.yaml to Gist with ID: $GIST_ID"

        # 使用 jq 构建 JSON 数据
        jq -n --rawfile content config.yaml '{
          files: {
            "config.yaml": {
              "content": $content
            }
          }
        }' > payload.json

        # 发送请求并保存响应
        response=$(curl -s -w "%{http_code}" \
          -X PATCH \
          -H "Authorization: token $GIST_TOKEN" \
          -H "Content-Type: application/json" \
          --data @payload.json \
          https://api.github.com/gists/$GIST_ID)

        # 提取状态码
        status_code=$(echo "$response" | tail -c 4)
        body=$(echo "$response" | head -c -4)

        if [ "$status_code" -ne 200 ]; then
          echo "Failed to update Gist. Status code: $status_code"
          echo "Response: $body"
          exit 1
        fi

        echo "Successfully updated Gist. Response: $body"

    - name: Cleanup temporary files
      if: always()
      run: rm -f payload.json

    - name: Success message
      run: echo "Workflow completed successfully!"
